<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbBrokenHeartIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        pgAAAKYB3X3/OAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJMSURBVEhLtZXP
        S1VBFMdH+0FBQdrTHmeuIkgECaIIbsOdtHIREeFOclH/gK5aGS1c5aLaiNAmBDcipASCYKnYQhfRrrzv
        maIhCNZSbt8z78513rnnvTa5+Lw3c873nHPnzMy9JkmScyVn2CMq7Fo7UCJ6Vo6ixxj3SI2n1NbWCc0g
        eALu/SoUrktNNojb25tK1s6AJAfRJhL0e+0OUS/sH3M6a0/BNLTNXut+fhLdgWMvEOYoWzvrgoxpwPxI
        +kOgPYiLxbuVAsY0xtZ+1oSCY2gvchDG74VPY41zGyz/qeJU4b3hAmjBsOaXxFE0yk8zLx11mOQCKHQT
        Y+63pgmZ4wIlYawJevvN7QOvwtpPmiYEmh0uUHfDcuBocgHs27jqr+aIhcuKI+Q3OPbwmU/3oTv114Rz
        8wompCOkTDTi2yKB/1/tnTA/OjpuYFD7DkTRlJacQY/fqjEM0T5fXifEZEgVVVj1CVFsCfOtgF2gxXB7
        HnBM9jQ4s2OaEJxA1uAKEC0q/hxo63OfNyvgEtTYD2zobfYj8KXmF7i74qkqwMREr2QQlvuQfVjBI+kT
        vJH5qiaOystsWgS+YF/6UgztGXiId76VIVWTDGMu4ITMZgmIPqT2Rsz/ZPYz5jgmlwfkDJ4vfX2XUGTB
        JcCR83bM14LErvjXrq7LYWyIavTgjlzxNx3jItswfh0kX8EBuCrjQlRjyGFLyzUkW0eiQZ7zKzgtsKF9
        IiWqUcI3EgXu8xj//Ui+jf/ss1gP1VgPbtv31tZbmk9DNf4/EvMXVwQ5Z+AXSIcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pbHeartIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAF
        vAAABbwBm+7JUgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGvSURBVEhLtZWx
        SgNBEIbPRi1ELARFQbAWSwnmNmGx8nK3wSavYOUD2GijD2CwEfEVTGsafQVBsFIJaLIboykNBALnzMGG
        vb0JxGQtvsvtP//+c2xub704jjNIwZeVyO/IEttvcD5PeZDnytasihhvl4rbnQpfoDypQSv0y1IwKSMW
        G3SBi26QW9S+xgFfAq0qo8K34Ytl6DeU8AMzM7m8BMGcDNlNypzl8bOcW+mU+Co8xBNRN7nGzGEDJQqn
        hCmLYK/w+5bRCVTonyQN2qK4CULPNjjgBx5ow1NR4ZIouqIKbwx7IApOaEX+vQc3TbvgkCY2+LJEl3zh
        Et0SBTdAtgfrdEQWHYDZ3ke0uw6D/3hNe5idbDTYxeeEYVrOhjsZP1QgKMswDUp//JIGCOzoPSgMLOMk
        DDBL5w4bIPCvHxMT/gZkmJmpBjCcAVMtM2l8aphhZqYbAHjAgLFuTRyHOnU4pQaaCZqQ4UhG0CRNBLsj
        wtKAZ1Q4QooaPHNhj1yRwQjU0EPN1ZCiDQQdQmDfCO+jRnltSJGiFRbzsBwSwXvKQ0GKo3gv+2sIVaOJ
        vV+s4ZnE3poVpgAAAABJRU5ErkJggg==
</value>
  </data>
</root>